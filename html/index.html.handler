#!/bin/bash
source "html/functions.bash"
page="$(cat - )"; method="$1"; url="$2"; args="$3"; logfile="$4.log"

# declare variables, and initialize them with a default, or a GET webargument (if received from form)
initArg "$args" "action"       ""
initArg "$args" "directory"    "/tmp"
initArg "$args" "outfile"      "/tmp/multishot.wav"
initArg "$args" "nfiles"       16
initArg "$args" "nstartfile"   0
initArg "$args" "pitchup"      "1.0"
initArg "$args" "sampleframes" 999999
initArg "$args" "sampletrim"   "00:00.15"
initArg "$args" "normalize"    "checked='checked'"
initArg "$args" "recursive"    "checked='checked'"
initArg "$args" "mono"         "checked='checked'"
initArg "$args" "soxextra"     "sox %s %s contrast 100"

# other

runsox(){
  files=0; dir="$1"; outfile="$2"; nfiles="$3"; nstartfile="$4"; pitchup="$5"; 
  normalize="$6"; maxlength="$7"; trim="$8"; recursive="$9"; mono="$10"; soxextra="${11}"
  [[ ${#normalize} != 0 ]] && normalize="--norm"
  [[ ${#mono} != 0 ]] && mono="-c 1"
  echo "./runsox $dir $outfile $nfiles $nstartfile $pitchup $normalize $maxlength $trim $recursive $mono $soxextra"
  normalize="$6"; maxlength="$7"; files=0; [[ ${#normalize} != 0 ]] && normalize="--norm"
  echo "$dir" | grep "\*\." &>/dev/null && dir="$(dirname "$dir")";
  cd "$dir"; echo "cd'ing to $(pwd)"; offset=0
  [[ ${#recursive} != 0 ]] && listcmd="find -L $dir \-name '*wav'" || listcmd="ls *.wav"
  [[ -f "$outfile" ]] && rm "$outfile"
  ${listcmd} | tail -n+$nstartfile | while read wavfile; do
    echo "checking $wavfile ($samples samples < $maxlength, files/nfiles: $files/$nfiles)"
    samples="$(soxi "$wavfile" | grep Duration | cut -d' ' -f11 )"
    if [[ ${#samples} > 0 ]] && 
       (( "$samples" < "$maxlength" )) && (( $files < $nfiles )); then
      echo "processing $wavfile"; name="$(basename "$wavfile")"
      sox "$wavfile" $normalize -c 2 -e signed -b 16 -r 44100 "/tmp/$name.wav" trim 0 $trim
      ((files=files+1))
    fi
    if (( $files >= $nfiles )); then break; fi 
  done
  cd /tmp
  echo sox *.wav.wav $mono $outfile speed "$pitchup" ${soxextra}
  sox *.wav.wav $mono $outfile speed "$pitchup" 
  extra="$( printf "$soxextra" "$outfile" "$outfile.wav")"; echo "$extra";
  ${extra}; mv "$outfile.wav" "$outfile"
  rm *.wav.wav
  echo "written $outfile ($(stat -c%s "$outfile") bytes)"
}

# lets handle!
action="$(getArg "action" "$args")"
case $action in

  play)
                aplay "$outfile" &>/dev/null &
                echo "$page" 
                ;;

  write)        
                output="$(runsox "${args["directory"]}" \
                                 "${args["outfile"]}" \
                                 "${args["nfiles"]}" \
                                 "${args["nstartfile"]}" \
                                 "${args["pitchup"]}" \
                                 "${args["normalize"]}" \
                                 "${args["sampleframes"]}" \
                                 "${args["sampletrim"]}" \
                                 "${args["recursive"]}" \
                                 "${args["mono"]}" \
                                 "${args["soxextra"]}" \
                                 2>&1 | tee -a "$logfile")"
                echo "$page" | replace '<!--output-->' "<div class='unit span-grid console'><pre>$output</pre></div>"
                ;;

  *)            echo "$page" | grep -v playfile
                ;;

esac | templatify
